@startuml

class Actor {
  # Actor(int, int, Transform, Texture): 
  - isAlive: boolean
  - health: int
}
class Coin {
  + Coin(Transform): 
  - COIN_VALUE: int
  - COIN_TEXTURE: Texture
  - objectScore: int
}
interface ControllableWorldModel << interface >>
class Enemy {
  + Enemy(int, int, int, int, Transform): 
  - damage: int
  - ENEMY_TEXTURE: Texture
  - objectScore: int
}
class EnemyFactory {
  + EnemyFactory(): 
}
class ExampleIT {
  + ExampleIT(): 
}
class ExampleTest {
  + ExampleTest(): 
}
class FixedObject {
  + FixedObject(Transform, Texture): 
}
class GameObject {
  + GameObject(Transform, Texture): 
  - texture: Texture
  - transform: Transform
}
enum GameState << enumeration >> {
  - GameState(): 
  + GAME_ACTIVE: 
  + GAME_PAUSED: 
  + GAME_OVER: 
  + GAME_MENU: 
}
class HelloWorld {
  + HelloWorld(): 
  - dy: float
  - spriteImage: Texture
  - font: BitmapFont
  - screenRect: Rectangle
  - spriteRect: Rectangle
  - batch: SpriteBatch
  - bellSound: Sound
  - dx: float
}
class Item {
  + Item(Transform, Texture): 
}
class Main {
  + Main(): 
  - WINDOW_HEIGHT: int
  - WINDOW_WIDTH: int
}
class MobileObject {
  # MobileObject(int, Transform, Texture): 
  - movementSpeed: int
}
class ParallaxBackground {
  + ParallaxBackground(): 
  - layers: Texture[]
  - layerX: float[]
  - scrollSpeeds: float[]
  - screenHeight: float
  - screenWidth: float
}
class Player {
  + Player(int, int): 
  - PLAYER_TEXTURE: Texture
  - PLAYER_TRANSFORM: Transform
  - START_POSITION: Position
  - SIZE: Size
}
class PlayerController {
  + PlayerController(ControllableWorldModel): 
  - controllableModel: ControllableWorldModel
  - movingRight: boolean
  - movingLeft: boolean
}
class PlayerControllerTest {
  + PlayerControllerTest(): 
  - controllableModel: ControllableWorldModel
  - playerController: PlayerController
}
entity Position << record >> {
  + Position(int, int): 
  - x: int
  - y: int
}
interface Scorable << interface >>
entity Size << record >> {
  + Size(int, int): 
  - width: int
  - height: int
}
class Transform {
  + Transform(Position, Size): 
  ~ size: Size
  ~ position: Position
}
interface ViewableObject << interface >>
interface ViewableWorldModel << interface >>
entity WorldBoard << record >> {
  + WorldBoard(int, int): 
  - height: int
  - width: int
}
class WorldModel {
  + WorldModel(WorldBoard): 
  - enemy: Enemy
  - board: WorldBoard
  - player: Player
  - worldView: WorldView
  - playerController: PlayerController
  - gameState: GameState
}
class WorldView {
  + WorldView(WorldModel, Viewport): 
  - playerTexture: Texture
  - batch: SpriteBatch
  - viewport: Viewport
  - shapeRenderer: ShapeRenderer
  - objectRenderer: ShapeRenderer
  - font: BitmapFont
  - parallaxBackground: ParallaxBackground
  - screenRect: Rectangle
  - player: ShapeRenderer
  - backgroundTexture: Texture
  - enemyTexture: Texture
  - model: WorldModel
  - textures: Map<String, Texture>
}
interface node0 as "package-info" << interface >>
interface node1 as "package-info" << interface >>
interface node18 as "package-info" << interface >>

Actor                   -[#000082,plain]-^  MobileObject           
Coin                    -[#000082,plain]-^  Item                   
Coin                    -[#008200,dashed]-^  Scorable               
Enemy                   -[#000082,plain]-^  Actor                  
Enemy                   -[#008200,dashed]-^  Scorable               
GameObject             "1" *-[#595959,plain]-> "transform\n1" Transform              
Item                    -[#000082,plain]-^  FixedObject            
MobileObject            -[#000082,plain]-^  GameObject             
Player                  -[#000082,plain]-^  Actor                  
Player                 "1" *-[#595959,plain]-> "START_POSITION\n1" Position               
Player                 "1" *-[#595959,plain]-> "SIZE\n1" Size                   
Player                 "1" *-[#595959,plain]-> "PLAYER_TRANSFORM\n1" Transform              
PlayerController       "1" *-[#595959,plain]-> "controllableModel\n1" ControllableWorldModel 
PlayerControllerTest   "1" *-[#595959,plain]-> "controllableModel\n1" ControllableWorldModel 
PlayerControllerTest   "1" *-[#595959,plain]-> "playerController\n1" PlayerController       
Transform              "1" *-[#595959,plain]-> "position\n1" Position               
Transform              "1" *-[#595959,plain]-> "size\n1" Size                   
WorldModel              -[#008200,dashed]-^  ControllableWorldModel 
WorldModel             "1" *-[#595959,plain]-> "enemy\n1" Enemy                  
WorldModel             "1" *-[#595959,plain]-> "gameState\n1" GameState              
WorldModel             "1" *-[#595959,plain]-> "player\n1" Player                 
WorldModel             "1" *-[#595959,plain]-> "playerController\n1" PlayerController       
WorldModel             "1" *-[#595959,plain]-> "board\n1" WorldBoard             
WorldModel             "1" *-[#595959,plain]-> "worldView\n1" WorldView
WorldView              "1" *-[#595959,plain]-> "parallaxBackground\n1" ParallaxBackground     
WorldView              "1" *-[#595959,plain]-> "model\n1" WorldModel             
@enduml
